
// construct a function object for find_if, count_if:

// pros:   1. operator() could be inlined;
//         2. object could add extra data for caching;


// 1. introduce a member variable to store the value being compared:
// usage: find_if(ivec.begin(), ivec.end(), CmpEq(25));

class CmpEq{
public:
    CmpEq(int &cmp):val(cmp){}
    bool operator()(int &tmp){ return (tmp==val); }
private:
    int val;
}


// 2. use template argument to pass the value being compared:
// usage: find_if(ivec.begin(), ivec.end(), CmpEq<25>());

template < int val>
class CmpEq{
public:
    bool operator()(int &tmp){ return (tmp==val); }
}


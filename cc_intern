==> virturl Constructor() ~Destructor()?
Ctor() must not be virturl: before Ctor(), vtab is not setup yet.
~Dtor() can be virturl.

==> same function name in multiple inheritance
will cause compile error of ambiguous name lookup,
even if they have different return value or different parameters.

==> difference between reference(r) & pointer(p):
1.  r   must be initialized and can't be changed after;
    p   can be initialized or not, p can be reasigned after;
2.  r   can't be assigned to NULL;
    p   can be assigned to NULL;
3.  r   assignment with another ref(r1) changes the value of the object r pointed to,
        r and r1 still point to the object originally they point to
    p   assignment with another pointer(p1) changes p itself,
        p points to the object which p1 points to after assignment

4.  r no arithmetics

==> smart pointers:
1.  simple one(std::auto_ptr, boost::scoped_ptr):
    simply delete memroy area of the pointer in destructor();
2.  use reference count in resource:
    the resource class has a COUNTER + management functions itself, 
    if a new pointer added to the resource, COUNTER+1; 
    if a pointer de-refers the relationship with the resource, COUNTER-1; 
    when COUNTER==0, delete the resource.
3.  use reference count in pointer(boost::shared_ptr):
    New an COUNTER in smart pointer class when a resource is newed, 
    the key point is the smart pointer only keeps the address of the COUNTER,
    thus the COUNTER can be shared by multiple pointers;




